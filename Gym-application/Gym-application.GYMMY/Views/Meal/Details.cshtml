@model Gym_application.Repository.Models.ViewModels.MealViewModels.MealViewModel

@{
    ViewData["Title"] = "Details";
}
<div class="text-center p-2" style="border:3px solid red">
   <div class="row">
       <div class="col">
           <h2 class="">Edit @Model.Meal.Id</h2>
           <div id="mealmessages"></div>
       </div>
   </div>

    <div class="row"  ng-cloak ng-app="myApp" ng-controller="NutritionalValuesCtrl" data-ng-init="init(@Model.Meal.Id)">
        <div class="col-md-6">    
            <h3>Values in Meal </h3>
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th scope="col">Name</th>
                        <th scope="col">C</th>
                        <th scope="col">B</th>
                        <th scope="col">W</th>
                        <th scope="col">T</th>
                        <th scope="col">G</th>
                        <th scope="col">R</th>
                    </tr>
                </thead>
                <tbody>
                    <tr ng-repeat="(key,value) in list">
                        <th scope="row">{{value.name}}</th>
                        <td>{{Calculate_per_grams(value.calorie,value.grams) }}</td>
                        <td>{{Calculate_per_grams(value.protein,value.grams) }}</td>
                        <td>{{Calculate_per_grams(value.carbohydrates,value.grams) }}</td>
                        <td>{{Calculate_per_grams(value.fat,value.grams) }}</td>

                        <td><input class="form-control" type="text" ng-change="calcall()" ng-model="value.grams"></td>
                        <td class="btn btn-danger" ng-click="Remove_Prod(key)"> X</td>
                    </tr>
                </tbody>
            </table>
            <div class="row" style="position:absolute; bottom:0px; width:100%;">
                <div class="col">{{calories_all}}</div>
                <div class="col">{{carbos_all}}</div>
                <div class="col">{{fats_all}}</div>
                <div class="col">{{proteins_all}}</div>
            </div>
        </div>

        <div class="col-md-6">
                <h3>Products</h3>
                    <input class="form-control " ng-model="search" type="search" placeholder="Search" aria-label="Search">
                <div  style="overflow: auto; max-height:350px;">

                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th scope="col">Name</th>
                                <th scope="col">C</th>
                                <th scope="col">B</th>
                                <th scope="col">W</th>
                                <th scope="col">T</th>
                                <th scope="col">D</th>
                                <th scope="col">H</th>
                                <th scope="col">A</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr ng-repeat="x in myData | filtername:search">
                                <th scope="row">{{x.name}}</th>
                                <td>{{x.calorie}}</td>
                                <td>{{x.protein}}</td>
                                <td>{{x.carbohydrates}}</td>
                                <td>{{x.fat}}</td>
                                <td>{{x.dish}}</td>
                                <td></td>
                                <td class="btn btn-sm btn-success" ng-click="Add_Prod(x)"> Add</td>
                            </tr>
                        </tbody>
                    </table>
                </div>

        </div>
        @*<div class="col-md-6">
            @await Component.InvokeAsync("Nutritional_Values")
            

        </div>*@        
        <div class="col-12 my-3">
            <button class="btn btn-dark" ng-click="Save_Data_post_method()">
                Save
            </button>
        </div>
    </div>
</div>



@*<script>
    var app = angular.module('myApp', []);
    app.service('DataService', function ($http) {
        //**********----Get All Record----***************
        var urlGet = '/meal/values';
        var url_api = '/api/Meal__Nutritional_Value';
        this.get_all_values = function () {
            return $http.get(url_api);
        }
        var urlGet2 = '/meal/Mealdata/' + '@Model.Meal.Id';
        this.get_all_values2 = function () {
            return $http.get(urlGet2);
        }
        this.send_post_data = function (urll, datalist) {
            $http({
                method: "post",
                url: urll,
                data: JSON.stringify({
                    values: datalist,
                    meal: {id:@Model.Meal.Id}
                }),
                //data: JSON.stringify(datalist),
                dataType: "json"
            }).then(function (response) {
                this.show_messages(response);
                });
        }
        show_messages = function (datalist) {
            var esc = new Date().getTime() +5000;
            document.getElementById('messages').innerHTML = '<div id="div'+esc+'" class="alert alert-success" role="alert">' + datalist.data[0].value + '</div>';
            var x = setInterval(function () {                
                var now = new Date().getTime();
                var distance = esc - now;
                if (distance < 2001) {
                    var element = document.getElementById('div' + esc);
                    element.classList.add("hidden")
                }
                if (distance < 0) {
                    clearInterval(x);                    
                    var element = document.getElementById('div'+esc);
                    element.parentNode.removeChild(element);
                }
                

            }, 1000);
        
        }
    });
    app.filter('filtername', function () {
        return function (x, search) {
            if (search == undefined) {
                search = '';
            }
            var log=[];
            angular.forEach(x, function (value) {
                if (value.name.toLowerCase().includes(search.toLowerCase())) {
                    this.push(value);
                }}, log);
            return log;
        };
    });
    app.controller('NutritionalValuesCtrl', ['$scope','$http','DataService', function ($scope,$http , DataService) {
        $scope.list = [];
        $scope.init = function () {
            
            var _values = DataService.get_all_values();
            _values.then(function (response) {
                $scope.myData = response.data;
            },
            function (error) {
                console.log("Error: " + error);
            });

            var _values2 = DataService.get_all_values2();
            _values2.then(function (response) {
                $scope.list = response.data.values;
            },function (error) {
                console.log("Error: " + error);
                });
        };
        $scope.Calculate_per_grams = function (param, grams) {
            return Calculate_per_grams_function(param, grams);
        };
        function Calculate_per_grams_function(param, grams) {
            return Math.round((param * (grams / 100)) * 100) / 100;
        };
        $scope.$watchCollection('list', function () {
            Calculate_all();
        });
        $scope.calcall = function () {
            Calculate_all();
        };
        function Calculate_all() {            
            var cal = 0, carbo = 0, fat = 0, protein = 0;
            angular.forEach($scope.list, function (value) {
                cal += Calculate_per_grams_function(value.calorie, value.grams);
                carbo += Calculate_per_grams_function(value.carbohydrates, value.grams);
                fat += Calculate_per_grams_function(value.fat, value.grams);
                protein += Calculate_per_grams_function(value.protein, value.grams);
            });
            $scope.calories_all = Math.round(cal * 100) / 100;
            $scope.carbos_all = Math.round(carbo * 100) / 100;
            $scope.fats_all = Math.round(fat * 100) / 100;
            $scope.proteins_all = Math.round(protein * 100) / 100;
        };
        $scope.Add_Prod = function (prod) {
            $scope.list.push({
                value_id: prod.id,
                name: prod.name,
                calorie: prod.calorie,
                protein: prod.protein,
                fat: prod.fat,
                carbohydrates: prod.carbohydrates,
                grams:100
            })
        };
        $scope.Remove_Prod = function (prodkey) {
            $scope.list.splice(prodkey, 1);
        };
        $scope.Save_Data_post_method = function () {
            //$http.post("https://localhost:44393/api/Meal__Nutritional_Value", JSON.stringify({
            //    modeloVenta: $scope.list
            //})).then(function () {
            //    toastr.info('Elemento insertado correctamente');
            //    });
            DataService.send_post_data('/api/Meal__Nutritional_Value', $scope.list)   
            
        };
        
    }]);
</script>*@
<script src="~/js/Meal_controller.js"></script>
